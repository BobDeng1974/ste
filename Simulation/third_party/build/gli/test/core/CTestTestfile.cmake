# CMake generated Testfile for 
# Source directory: C:/src/git/StE/Simulation/third_party/packages/gli/test/core
# Build directory: C:/src/git/StE/Simulation/third_party/build/gli/test/core
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core.exe")
else()
  add_test(test-core NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_addressing "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_addressing.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_addressing "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_addressing.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_addressing "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_addressing.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_addressing "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_addressing.exe")
else()
  add_test(test-core_addressing NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_comparison "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_comparison.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_comparison "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_comparison.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_comparison "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_comparison.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_comparison "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_comparison.exe")
else()
  add_test(test-core_comparison NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-convert_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-convert_sampler1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-convert_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-convert_sampler1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-convert_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-convert_sampler1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-convert_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-convert_sampler1d.exe")
else()
  add_test(test-convert_sampler1d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-convert_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-convert_sampler1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-convert_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-convert_sampler1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-convert_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-convert_sampler1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-convert_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-convert_sampler1d_array.exe")
else()
  add_test(test-convert_sampler1d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-convert_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-convert_sampler2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-convert_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-convert_sampler2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-convert_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-convert_sampler2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-convert_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-convert_sampler2d.exe")
else()
  add_test(test-convert_sampler2d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-convert_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-convert_sampler2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-convert_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-convert_sampler2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-convert_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-convert_sampler2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-convert_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-convert_sampler2d_array.exe")
else()
  add_test(test-convert_sampler2d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-convert_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-convert_sampler3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-convert_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-convert_sampler3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-convert_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-convert_sampler3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-convert_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-convert_sampler3d.exe")
else()
  add_test(test-convert_sampler3d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-convert_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-convert_sampler_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-convert_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-convert_sampler_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-convert_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-convert_sampler_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-convert_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-convert_sampler_cube.exe")
else()
  add_test(test-convert_sampler_cube NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-convert_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-convert_sampler_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-convert_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-convert_sampler_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-convert_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-convert_sampler_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-convert_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-convert_sampler_cube_array.exe")
else()
  add_test(test-convert_sampler_cube_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_convert "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_convert.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_convert "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_convert.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_convert "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_convert.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_convert "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_convert.exe")
else()
  add_test(test-core_convert NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_convert_access "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_convert_access.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_convert_access "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_convert_access.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_convert_access "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_convert_access.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_convert_access "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_convert_access.exe")
else()
  add_test(test-core_convert_access NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_filter_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_filter_1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_filter_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_filter_1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_filter_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_filter_1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_filter_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_filter_1d.exe")
else()
  add_test(test-core_filter_1d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_filter_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_filter_2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_filter_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_filter_2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_filter_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_filter_2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_filter_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_filter_2d.exe")
else()
  add_test(test-core_filter_2d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_filter_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_filter_3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_filter_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_filter_3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_filter_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_filter_3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_filter_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_filter_3d.exe")
else()
  add_test(test-core_filter_3d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_format "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_format.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_format "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_format.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_format "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_format.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_format "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_format.exe")
else()
  add_test(test-core_format NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_sample "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_sample.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_sample "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_sample.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_sample "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_sample.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_sample "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_sample.exe")
else()
  add_test(test-core_sample NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_storage "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_storage.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_storage "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_storage.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_storage "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_storage.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_storage "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_storage.exe")
else()
  add_test(test-core_storage NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_image "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_image.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_image "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_image.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_image "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_image.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_image "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_image.exe")
else()
  add_test(test-core_image NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load.exe")
else()
  add_test(test-core_load NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_gen_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_gen_1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_gen_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_gen_1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_gen_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_gen_1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_gen_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_gen_1d.exe")
else()
  add_test(test-core_load_gen_1d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_gen_1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_gen_1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_gen_1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_gen_1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_gen_1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_gen_1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_gen_1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_gen_1d_array.exe")
else()
  add_test(test-core_load_gen_1d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_gen_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_gen_2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_gen_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_gen_2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_gen_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_gen_2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_gen_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_gen_2d.exe")
else()
  add_test(test-core_load_gen_2d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_gen_2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_gen_2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_gen_2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_gen_2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_gen_2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_gen_2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_gen_2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_gen_2d_array.exe")
else()
  add_test(test-core_load_gen_2d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_gen_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_gen_3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_gen_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_gen_3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_gen_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_gen_3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_gen_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_gen_3d.exe")
else()
  add_test(test-core_load_gen_3d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_gen_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_gen_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_gen_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_gen_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_gen_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_gen_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_gen_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_gen_cube.exe")
else()
  add_test(test-core_load_gen_cube NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_gen_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_gen_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_gen_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_gen_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_gen_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_gen_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_gen_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_gen_cube_array.exe")
else()
  add_test(test-core_load_gen_cube_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_gen_rect "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_gen_rect.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_gen_rect "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_gen_rect.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_gen_rect "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_gen_rect.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_gen_rect "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_gen_rect.exe")
else()
  add_test(test-core_load_gen_rect NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_dds "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_dds.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_dds "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_dds.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_dds "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_dds.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_dds "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_dds.exe")
else()
  add_test(test-core_load_dds NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_load_ktx "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_load_ktx.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_load_ktx "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_load_ktx.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_load_ktx "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_load_ktx.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_load_ktx "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_load_ktx.exe")
else()
  add_test(test-core_load_ktx NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_sampler_clear "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_sampler_clear.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_sampler_clear "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_sampler_clear.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_sampler_clear "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_sampler_clear.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_sampler_clear "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_sampler_clear.exe")
else()
  add_test(test-core_sampler_clear NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_sampler_texel "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_sampler_texel.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_sampler_texel "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_sampler_texel.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_sampler_texel "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_sampler_texel.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_sampler_texel "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_sampler_texel.exe")
else()
  add_test(test-core_sampler_texel NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_sampler_wrap "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_sampler_wrap.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_sampler_wrap "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_sampler_wrap.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_sampler_wrap "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_sampler_wrap.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_sampler_wrap "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_sampler_wrap.exe")
else()
  add_test(test-core_sampler_wrap NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_save "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_save.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_save "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_save.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_save "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_save.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_save "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_save.exe")
else()
  add_test(test-core_save NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-gl "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-gl.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-gl "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-gl.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-gl "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-gl.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-gl "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-gl.exe")
else()
  add_test(test-gl NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-texture_lod_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-texture_lod_sampler1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-texture_lod_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-texture_lod_sampler1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-texture_lod_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-texture_lod_sampler1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-texture_lod_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-texture_lod_sampler1d.exe")
else()
  add_test(test-texture_lod_sampler1d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-texture_lod_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-texture_lod_sampler1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-texture_lod_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-texture_lod_sampler1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-texture_lod_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-texture_lod_sampler1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-texture_lod_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-texture_lod_sampler1d_array.exe")
else()
  add_test(test-texture_lod_sampler1d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-texture_lod_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-texture_lod_sampler2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-texture_lod_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-texture_lod_sampler2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-texture_lod_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-texture_lod_sampler2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-texture_lod_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-texture_lod_sampler2d.exe")
else()
  add_test(test-texture_lod_sampler2d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-texture_lod_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-texture_lod_sampler2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-texture_lod_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-texture_lod_sampler2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-texture_lod_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-texture_lod_sampler2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-texture_lod_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-texture_lod_sampler2d_array.exe")
else()
  add_test(test-texture_lod_sampler2d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-texture_lod_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-texture_lod_sampler3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-texture_lod_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-texture_lod_sampler3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-texture_lod_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-texture_lod_sampler3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-texture_lod_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-texture_lod_sampler3d.exe")
else()
  add_test(test-texture_lod_sampler3d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-texture_lod_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-texture_lod_sampler_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-texture_lod_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-texture_lod_sampler_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-texture_lod_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-texture_lod_sampler_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-texture_lod_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-texture_lod_sampler_cube.exe")
else()
  add_test(test-texture_lod_sampler_cube NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-texture_lod_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-texture_lod_sampler_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-texture_lod_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-texture_lod_sampler_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-texture_lod_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-texture_lod_sampler_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-texture_lod_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-texture_lod_sampler_cube_array.exe")
else()
  add_test(test-texture_lod_sampler_cube_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-generate_mipmaps_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-generate_mipmaps_sampler1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-generate_mipmaps_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-generate_mipmaps_sampler1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-generate_mipmaps_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-generate_mipmaps_sampler1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-generate_mipmaps_sampler1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-generate_mipmaps_sampler1d.exe")
else()
  add_test(test-generate_mipmaps_sampler1d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-generate_mipmaps_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-generate_mipmaps_sampler1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-generate_mipmaps_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-generate_mipmaps_sampler1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-generate_mipmaps_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-generate_mipmaps_sampler1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-generate_mipmaps_sampler1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-generate_mipmaps_sampler1d_array.exe")
else()
  add_test(test-generate_mipmaps_sampler1d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-generate_mipmaps_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-generate_mipmaps_sampler2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-generate_mipmaps_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-generate_mipmaps_sampler2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-generate_mipmaps_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-generate_mipmaps_sampler2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-generate_mipmaps_sampler2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-generate_mipmaps_sampler2d.exe")
else()
  add_test(test-generate_mipmaps_sampler2d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-generate_mipmaps_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-generate_mipmaps_sampler2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-generate_mipmaps_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-generate_mipmaps_sampler2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-generate_mipmaps_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-generate_mipmaps_sampler2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-generate_mipmaps_sampler2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-generate_mipmaps_sampler2d_array.exe")
else()
  add_test(test-generate_mipmaps_sampler2d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-generate_mipmaps_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-generate_mipmaps_sampler3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-generate_mipmaps_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-generate_mipmaps_sampler3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-generate_mipmaps_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-generate_mipmaps_sampler3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-generate_mipmaps_sampler3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-generate_mipmaps_sampler3d.exe")
else()
  add_test(test-generate_mipmaps_sampler3d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-generate_mipmaps_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-generate_mipmaps_sampler_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-generate_mipmaps_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-generate_mipmaps_sampler_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-generate_mipmaps_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-generate_mipmaps_sampler_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-generate_mipmaps_sampler_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-generate_mipmaps_sampler_cube.exe")
else()
  add_test(test-generate_mipmaps_sampler_cube NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-generate_mipmaps_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-generate_mipmaps_sampler_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-generate_mipmaps_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-generate_mipmaps_sampler_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-generate_mipmaps_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-generate_mipmaps_sampler_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-generate_mipmaps_sampler_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-generate_mipmaps_sampler_cube_array.exe")
else()
  add_test(test-generate_mipmaps_sampler_cube_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_swizzle "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_swizzle.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_swizzle "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_swizzle.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_swizzle "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_swizzle.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_swizzle "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_swizzle.exe")
else()
  add_test(test-core_swizzle NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_texture "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_texture.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_texture "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_texture.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_texture "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_texture.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_texture "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_texture.exe")
else()
  add_test(test-core_texture NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_texture_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_texture_1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_texture_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_texture_1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_texture_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_texture_1d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_texture_1d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_texture_1d.exe")
else()
  add_test(test-core_texture_1d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_texture_1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_texture_1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_texture_1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_texture_1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_texture_1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_texture_1d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_texture_1d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_texture_1d_array.exe")
else()
  add_test(test-core_texture_1d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_texture_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_texture_2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_texture_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_texture_2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_texture_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_texture_2d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_texture_2d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_texture_2d.exe")
else()
  add_test(test-core_texture_2d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_texture_2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_texture_2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_texture_2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_texture_2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_texture_2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_texture_2d_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_texture_2d_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_texture_2d_array.exe")
else()
  add_test(test-core_texture_2d_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_texture_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_texture_3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_texture_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_texture_3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_texture_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_texture_3d.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_texture_3d "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_texture_3d.exe")
else()
  add_test(test-core_texture_3d NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_texture_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_texture_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_texture_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_texture_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_texture_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_texture_cube.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_texture_cube "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_texture_cube.exe")
else()
  add_test(test-core_texture_cube NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_texture_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_texture_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_texture_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_texture_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_texture_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_texture_cube_array.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_texture_cube_array "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_texture_cube_array.exe")
else()
  add_test(test-core_texture_cube_array NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_clear "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_clear.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_clear "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_clear.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_clear "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_clear.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_clear "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_clear.exe")
else()
  add_test(test-core_clear NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_fetch "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_fetch.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_fetch "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_fetch.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_fetch "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_fetch.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_fetch "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_fetch.exe")
else()
  add_test(test-core_fetch NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-core_flip "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-core_flip.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-core_flip "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-core_flip.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-core_flip "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-core_flip.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-core_flip "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-core_flip.exe")
else()
  add_test(test-core_flip NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-reduce "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-reduce.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-reduce "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-reduce.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-reduce "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-reduce.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-reduce "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-reduce.exe")
else()
  add_test(test-reduce NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-test_copy "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-test_copy.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-test_copy "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-test_copy.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-test_copy "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-test_copy.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-test_copy "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-test_copy.exe")
else()
  add_test(test-test_copy NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-test_copy_sub "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-test_copy_sub.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-test_copy_sub "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-test_copy_sub.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-test_copy_sub "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-test_copy_sub.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-test_copy_sub "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-test_copy_sub.exe")
else()
  add_test(test-test_copy_sub NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-test_duplicate "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-test_duplicate.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-test_duplicate "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-test_duplicate.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-test_duplicate "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-test_duplicate.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-test_duplicate "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-test_duplicate.exe")
else()
  add_test(test-test_duplicate NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-test_view "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-test_view.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-test_view "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-test_view.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-test_view "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-test_view.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-test_view "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-test_view.exe")
else()
  add_test(test-test_view NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-test_size "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-test_size.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-test_size "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-test_size.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-test_size "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-test_size.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-test_size "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-test_size.exe")
else()
  add_test(test-test_size NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-test_make_texture "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-test_make_texture.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-test_make_texture "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-test_make_texture.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-test_make_texture "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-test_make_texture.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-test_make_texture "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-test_make_texture.exe")
else()
  add_test(test-test_make_texture NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test-transform "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Debug/test-transform.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test-transform "C:/src/git/StE/Simulation/third_party/build/gli/test/core/Release/test-transform.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test-transform "C:/src/git/StE/Simulation/third_party/build/gli/test/core/MinSizeRel/test-transform.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test-transform "C:/src/git/StE/Simulation/third_party/build/gli/test/core/RelWithDebInfo/test-transform.exe")
else()
  add_test(test-transform NOT_AVAILABLE)
endif()
