
#type compute
#version 450

#include <hdr_common.glsl>

layout(local_size_x = 32, local_size_y = 32) in;

layout(r32f, binding = 0) restrict readonly uniform image2D hdr_lums;

// TODO: Changed from atomic variable
layout(std430, binding = 10) restrict buffer histogram_data {
	uint histogram[bins];
};

layout(std430, binding = 2) restrict readonly buffer hdr_bokeh_parameters_buffer {
	hdr_bokeh_parameters params;
};

void main() {
	float l = imageLoad(hdr_lums, ivec2(gl_GlobalInvocationID.xy)).x;

	float min_lum = intBitsToFloat(params.lum_min);
	float max_lum = intBitsToFloat(params.lum_max);

	int bin = int(hdr_bin(max_lum, min_lum, l));
	atomicAdd(histogram[bin], 1);
}
